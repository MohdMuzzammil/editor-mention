{"version":3,"sources":["webpack:///./examples/antd.js"],"names":["Mention","props","state","suggestions","focus","componentWillReceiveProps","nextProps","setState","onSearchChange","value","defaultSearchChange","onChange","editorState","searchValue","toLowerCase","filteredSuggestions","filter","suggestion","indexOf","render","className","prefixCls","style","multiLines","defaultValue","notFoundContent","cls","loading","bind","Component","defaultProps","console","log","document","getElementById"],"mappings":"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","file":"antd.js","sourcesContent":["import 'rc-editor-mention/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport RcMention, { Nav, toString, toEditorState } from 'rc-editor-mention';\nimport classnames from 'classnames';\n\nexport default class Mention extends React.Component {\n  static defaultProps = {\n    prefixCls: 'ant-mention',\n    suggestions: [],\n    notFoundContent: '无匹配结果，轻敲空格完成输入',\n    loading: false,\n    multiLines: false,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: props.suggestions,\n      focus: false,\n    };\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      suggestions: nextProps.suggestions,\n    });\n  }\n  \n  onSearchChange(value) {\n    if (this.props.onSearchChange) {\n      return this.props.onSearchChange(value);\n    }\n    return this.defaultSearchChange(value);\n  }\n  \n  onChange(editorState) {\n    if (this.props.onChange) {\n      this.props.onChange(editorState);\n    }\n  }\n  \n  defaultSearchChange(value) {\n    const searchValue = value.toLowerCase();\n    const filteredSuggestions = this.props.suggestions.filter(\n      suggestion => suggestion.toLowerCase().indexOf(searchValue) !== -1\n    );\n    this.setState({\n      suggestions: filteredSuggestions,\n    });\n  }\n  \n  render() {\n    const { className, prefixCls, style, multiLines, defaultValue } = this.props;\n    let { notFoundContent } = this.props;\n    \n    const { suggestions, focus } = this.state;\n    const cls = classnames({\n      [className]: !!className,\n      ['active']: focus,\n    });\n    \n    if (this.props.loading) {\n      notFoundContent = <i className=\"anticon anticon-loading\"></i>;\n    }\n    \n    return <RcMention\n      {...this.props}\n      className={cls}\n      prefixCls={prefixCls}\n      style={style}\n      defaultValue={defaultValue}\n      multiLines={multiLines}\n      onSearchChange={this.onSearchChange.bind(this)}\n      onChange={this.onChange.bind(this)}\n      onFocus={() => this.setState({focus: true})}\n      onBlur={() => this.setState({focus: false})}\n      suggestions={suggestions}\n      notFoundContent={notFoundContent}\n    />;\n  }\n}\n\n\nfunction onChange(editorState) {\n  console.log(toString(editorState));\n}\n\nReactDOM.render(<Mention\n  onChange={onChange}\n  defaultValue={toEditorState('@afc163')}\n  suggestions={['afc163', 'benjycui', 'yiminghe', 'jljsj33', 'dqaria', 'RaoHai']}\n/>, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/antd.js"],"sourceRoot":""}