{"version":3,"sources":["webpack:///./examples/mentionMode.js"],"names":["originSuggestions","MentionEditor","state","suggestions","editorMode","onSearchChange","value","searchValue","toLowerCase","filtered","filter","suggestion","indexOf","setState","selectChange","ev","target","render","width","React","Component","ReactDOM","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;;AAEA,IAAMA,oBAAoB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,SAAnC,EAA8C,QAA9C,EAAwD,QAAxD,CAA1B;;IAEMC,a;;;;;;;;;;;;qNACJC,K,GAAQ;AACNC,mBAAaH,iBADP;AAENI,kBAAY;AAFN,K,QAIRC,c,GAAiB,UAACC,KAAD,EAAW;AAC1B,UAAMC,cAAcD,MAAME,WAAN,EAApB;AACA,UAAMC,WAAWT,kBAAkBU,MAAlB,CAAyB;AAAA,eACxCC,WAAWH,WAAX,GAAyBI,OAAzB,CAAiCL,WAAjC,MAAkD,CAAC,CADX;AAAA,OAAzB,CAAjB;AAGA,YAAKM,QAAL,CAAc;AACZV,qBAAaM;AADD,OAAd;AAGD,K,QACDK,Y,GAAe,UAACC,EAAD,EAAQ;AACrB,UAAMT,QAAQS,GAAGC,MAAH,CAAUV,KAAxB;AACA,YAAKO,QAAL,CAAc;AACZT,oBAAYE;AADA,OAAd;AAGD,K;;;0BACDW,M,qBAAS;AAAA,iBAC6B,KAAKf,KADlC;AAAA,QACCC,WADD,UACCA,WADD;AAAA,QACcC,UADd,UACcA,UADd;;AAEP,WACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,OADF;AAEE;AAAA;AAAA;AAAA;AAAA,OAFF;AAGE;AAAA;AAAA,UAAQ,UAAU,KAAKU,YAAvB,EAAqC,OAAOV,UAA5C;AACE;AAAA;AAAA,YAAQ,OAAM,WAAd;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAQ,OAAM,SAAd;AAAA;AAAA;AAFF,OAHF;AAOE,kEAAC,kEAAD,IAAS,OAAO,EAAEc,OAAO,GAAT,EAAhB;AACE,wBAAgB,KAAKb,cADvB;AAEE,qBAAaF,WAFf;AAGE,cAAMC,UAHR;AAIE,gBAAO;AAJT;AAPF,KADF;AAgBD,G;;;EAtCyB,6CAAAe,CAAMC,S;;AAyClC,iDAAAC,CAASJ,MAAT,CAAgB;AAAA;AAAA;AACd;AAAA;AAAA;AAAA;AAAA,GADc;AAEd,8DAAC,aAAD;AAFc,CAAhB,EAGQK,SAASC,cAAT,CAAwB,iBAAxB,CAHR,E","file":"examples/mentionMode.js","sourcesContent":["// use jsx to render html, do not modify simple.html\n\nimport 'rc-editor-mention/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Mention from 'rc-editor-mention';\n\nconst originSuggestions = ['afc163', 'benjycui', 'yiminghe', 'jljsj33', 'dqaria', 'RaoHai'];\n\nclass MentionEditor extends React.Component {\n  state = {\n    suggestions: originSuggestions,\n    editorMode: 'immutable',\n  };\n  onSearchChange = (value) => {\n    const searchValue = value.toLowerCase();\n    const filtered = originSuggestions.filter(suggestion =>\n      suggestion.toLowerCase().indexOf(searchValue) !== -1\n    );\n    this.setState({\n      suggestions: filtered,\n    });\n  }\n  selectChange = (ev) => {\n    const value = ev.target.value;\n    this.setState({\n      editorMode: value,\n    });\n  }\n  render() {\n    const { suggestions, editorMode } = this.state;\n    return (\n      <div>\n        <h4>完整标签模式时, 在 tag 后边按退格键,将会删除整个标签。而在自由模式时,按退格键,则会重新编辑标签。</h4>\n        <p>切换标签模式只对之后添加的 tag 有效。</p>\n        <select onChange={this.selectChange} value={editorMode}>\n          <option value=\"immutable\">完整标签模式</option>\n          <option value=\"mutable\">自由模式</option>\n        </select>\n        <Mention style={{ width: 300 }}\n          onSearchChange={this.onSearchChange}\n          suggestions={suggestions}\n          mode={editorMode}\n          prefix=\"@\"\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<div>\n  <p> you can @ one of afc163, benjycui, yiminghe, jljsj33, simaQ, YuhangGe, dqaria, RaoHai</p>\n  <MentionEditor />\n</div>, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mentionMode.js"],"sourceRoot":""}