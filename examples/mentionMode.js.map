{"version":3,"sources":["webpack:///./examples/mentionMode.js"],"names":["originSuggestions","MentionEditor","state","suggestions","editorMode","onSearchChange","value","searchValue","toLowerCase","filtered","filter","suggestion","indexOf","setState","selectChange","ev","target","render","width","Component","document","getElementById"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;gfALA;;AAOA,KAAMA,oBAAoB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,SAAnC,EAA8C,QAA9C,EAAwD,QAAxD,CAA1B;;KAEMC,a;;;;;;;;;;;;yJACJC,K,GAAQ;AACNC,oBAAaH,iBADP;AAENI,mBAAY;AAFN,M,QAIRC,c,GAAiB,UAACC,KAAD,EAAW;AAC1B,WAAMC,cAAcD,MAAME,WAAN,EAApB;AACA,WAAMC,WAAWT,kBAAkBU,MAAlB,CAAyB;AAAA,gBACxCC,WAAWH,WAAX,GAAyBI,OAAzB,CAAiCL,WAAjC,MAAkD,CAAC,CADX;AAAA,QAAzB,CAAjB;AAGA,aAAKM,QAAL,CAAc;AACZV,sBAAaM;AADD,QAAd;AAGD,M,QACDK,Y,GAAe,UAACC,EAAD,EAAQ;AACrB,WAAMT,QAAQS,GAAGC,MAAH,CAAUV,KAAxB;AACA,aAAKO,QAAL,CAAc;AACZT,qBAAYE;AADA,QAAd;AAGD,M;;;2BACDW,M,qBAAS;AAAA,kBAC6B,KAAKf,KADlC;AAAA,SACCC,WADD,UACCA,WADD;AAAA,SACcC,UADd,UACcA,UADd;;AAEP,YACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,QADF;AAEE;AAAA;AAAA;AAAA;AAAA,QAFF;AAGE;AAAA;AAAA,WAAQ,UAAU,KAAKU,YAAvB,EAAqC,OAAOV,UAA5C;AACE;AAAA;AAAA,aAAQ,OAAM,WAAd;AAAA;AAAA,UADF;AAEE;AAAA;AAAA,aAAQ,OAAM,SAAd;AAAA;AAAA;AAFF,QAHF;AAOE,kEAAS,OAAO,EAAEc,OAAO,GAAT,EAAhB;AACE,yBAAgB,KAAKb,cADvB;AAEE,sBAAaF,WAFf;AAGE,eAAMC,UAHR;AAIE,iBAAO;AAJT;AAPF,MADF;AAgBD,I;;;GAtCyB,gBAAMe,S;;AAyClC,oBAASF,MAAT,CAAgB;AAAA;AAAA;AACd;AAAA;AAAA;AAAA;AAAA,IADc;AAEd,iCAAC,aAAD;AAFc,EAAhB,EAGQG,SAASC,cAAT,CAAwB,iBAAxB,CAHR,E","file":"mentionMode.js","sourcesContent":["// use jsx to render html, do not modify simple.html\n\nimport 'rc-editor-mention/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Mention from 'rc-editor-mention';\n\nconst originSuggestions = ['afc163', 'benjycui', 'yiminghe', 'jljsj33', 'dqaria', 'RaoHai'];\n\nclass MentionEditor extends React.Component {\n  state = {\n    suggestions: originSuggestions,\n    editorMode: 'immutable',\n  };\n  onSearchChange = (value) => {\n    const searchValue = value.toLowerCase();\n    const filtered = originSuggestions.filter(suggestion =>\n      suggestion.toLowerCase().indexOf(searchValue) !== -1\n    );\n    this.setState({\n      suggestions: filtered,\n    });\n  }\n  selectChange = (ev) => {\n    const value = ev.target.value;\n    this.setState({\n      editorMode: value,\n    });\n  }\n  render() {\n    const { suggestions, editorMode } = this.state;\n    return (\n      <div>\n        <h4>完整标签模式时, 在 tag 后边按退格键,将会删除整个标签。而在自由模式时,按退格键,则会重新编辑标签。</h4>\n        <p>切换标签模式只对之后添加的 tag 有效。</p>\n        <select onChange={this.selectChange} value={editorMode}>\n          <option value=\"immutable\">完整标签模式</option>\n          <option value=\"mutable\">自由模式</option>\n        </select>\n        <Mention style={{ width: 300 }}\n          onSearchChange={this.onSearchChange}\n          suggestions={suggestions}\n          mode={editorMode}\n          prefix=\"@\"\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<div>\n  <p> you can @ one of afc163, benjycui, yiminghe, jljsj33, simaQ, YuhangGe, dqaria, RaoHai</p>\n  <MentionEditor />\n</div>, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mentionMode.js"],"sourceRoot":""}