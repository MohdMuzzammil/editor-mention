{"version":3,"sources":["webpack:///./examples/mentionMode.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,KAAM,oBAAoB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,SAAnC,EAA8C,QAA9C,EAAwD,QAAxD,CAA1B;;AAEA,KAAM,gBAAgB,gBAAM,WAAN,CAAkB;AAAA;AACtC,kBADsC,6BACpB;AAChB,YAAO;AACL,oBAAa,iBADR;AAEL,mBAAY;AAFP,MAAP;AAID,IANqC;AAQtC,iBARsC,0BAQvB,KARuB,EAQhB;AACpB,SAAM,cAAc,MAAM,WAAN,EAApB;AACA,SAAM,WAAW,kBAAkB,MAAlB,CAAyB;AAAA,cACxC,WAAW,WAAX,GAAyB,OAAzB,CAAiC,WAAjC,MAAkD,CAAC,CADX;AAAA,MAAzB,CAAjB;AAGA,UAAK,QAAL,CAAc;AACZ,oBAAa;AADD,MAAd;AAGD,IAhBqC;AAiBtC,eAjBsC,wBAiBzB,EAjByB,EAiBrB;AACf,SAAM,QAAQ,GAAG,MAAH,CAAU,KAAxB;AACA,UAAK,QAAL,CAAc;AACZ,mBAAY;AADA,MAAd;AAGD,IAtBqC;AAuBtC,SAvBsC,oBAuB7B;AAAA,kBAC6B,KAAK,KADlC;AAAA,SACC,WADD,UACC,WADD;AAAA,SACc,UADd,UACc,UADd;;AAEP,YAAQ;AAAA;OAAA;OACN;AAAA;SAAA;SAAA;AAAA,QADM;OAEN;AAAA;SAAA;SAAA;AAAA,QAFM;OAGN;AAAA;SAAA,EAAQ,UAAU,KAAK,YAAvB,EAAqC,OAAO,UAA5C;SACE;AAAA;WAAA,EAAQ,OAAM,WAAd;WAAA;AAAA,UADF;SAEE;AAAA;WAAA,EAAQ,OAAM,SAAd;WAAA;AAAA;AAFF,QAHM;OAON,2DAAS,OAAO,EAAE,OAAO,GAAT,EAAhB;AACE,yBAAgB,KAAK,cADvB;AAEE,sBAAa,WAFf;AAGE,eAAM,UAHR;AAIE,iBAAO;AAJT;AAPM,MAAR;AAcD;AAvCqC,EAAlB,CAAtB;;AA0CA,oBAAS,MAAT,CAAgB;AAAA;GAAA;GACd;AAAA;KAAA;KAAA;AAAA,IADc;GAEd,8BAAC,aAAD;AAFc,EAAhB,EAGQ,SAAS,cAAT,CAAwB,iBAAxB,CAHR,E","file":"mentionMode.js","sourcesContent":["// use jsx to render html, do not modify simple.html\n\nimport 'rc-editor-mention/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Mention from 'rc-editor-mention';\n\nconst originSuggestions = ['afc163', 'benjycui', 'yiminghe', 'jljsj33', 'dqaria', 'RaoHai'];\n\nconst MentionEditor = React.createClass({\n  getInitialState() {\n    return {\n      suggestions: originSuggestions,\n      editorMode: 'immutable',\n    };\n  },\n\n  onSearchChange(value) {\n    const searchValue = value.toLowerCase();\n    const filtered = originSuggestions.filter(suggestion =>\n      suggestion.toLowerCase().indexOf(searchValue) !== -1\n    );\n    this.setState({\n      suggestions: filtered,\n    });\n  },\n  selectChange(ev) {\n    const value = ev.target.value;\n    this.setState({\n      editorMode: value,\n    });\n  },\n  render() {\n    const { suggestions, editorMode } = this.state;\n    return (<div>\n      <h4>完整标签模式时, 在 tag 后边按退格键,将会删除整个标签。而在自由模式时,按退格键,则会重新编辑标签。</h4>\n      <p>切换标签模式只对之后添加的 tag 有效。</p>\n      <select onChange={this.selectChange} value={editorMode}>\n        <option value=\"immutable\">完整标签模式</option>\n        <option value=\"mutable\">自由模式</option>\n      </select>\n      <Mention style={{ width: 300 }}\n        onSearchChange={this.onSearchChange}\n        suggestions={suggestions}\n        mode={editorMode}\n        prefix=\"@\"\n      />\n    </div>);\n  },\n});\n\nReactDOM.render(<div>\n  <p> you can @ one of afc163, benjycui, yiminghe, jljsj33, simaQ, YuhangGe, dqaria, RaoHai</p>\n  <MentionEditor />\n</div>, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/mentionMode.js\n **/"],"sourceRoot":""}